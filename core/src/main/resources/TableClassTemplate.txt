@args String packageName
package @packageName;

import java.util.*;
import java.math.*;
import org.nutz.dao.entity.annotation.*;

@args com.asiainfo.dbb.model.Table table

@def boolean isSinglePKColumn(String columnName) {
    boolean isSinglePK = table.getPrimaryKey() != null && table.getPrimaryKey().getColumns().size() == 1;
    if(isSinglePK) {
        return table.getPrimaryKey().getColumns().get(0).equals(columnName);
    }
    return false;
}

@def renderPKAnnotation() {
    @if(table.getPrimaryKey() != null && table.getPrimaryKey().getColumns().size() > 1){
        @@PK({@table.getPrimaryKey().getColumns().app_format().app_fieldName()})
    }
}

@def renderIndexesAnnotation() {
    @if(!table.getIndexes().isEmpty()) {
        @@TableIndexes({
        @for(com.asiainfo.dbb.model.Index index : table.getIndexes()) {
           @@Index(name = "@index.getName()",
                   fields = {@index.getColumns().app_format().app_fieldName()},
                   unique = @index.getType().name().equals("UNIQUE")) @if(!index_isLast) { , }
        }
        })
    }
}

@@Table("@table.getName()")
@@Comment("@table.getComment()")
@renderPKAnnotation()
@renderIndexesAnnotation()
public class @table.getName().app_methodName() {

@for(com.asiainfo.dbb.model.Column column : table.getColumns()) {
    @{String columnName = column.getName()}
    @if(isSinglePKColumn(columnName)) {
        @{columnName = "id"}
        @if(column.getJavaType().getSimpleName().equals("String")) {@@Name} else {@@Id}
    }
    @@Column("@column.getName()")
    @@ColDefine(
        type = ColType.@column.getType()
        @if(column.getWidth() != null) {,width = @column.getWidth()}
        @if(column.getPrecision() != null) {,precision = @column.getPrecision()}
        ,notNull = @if(column.getNullable()) {false} else {true}
    )
    @@Comment("@column.getComment()")
    private @column.getJavaType().getSimpleName() @columnName.app_fieldName();

}

@for(com.asiainfo.dbb.model.Column column : table.getColumns()) {
    @{ String columnName = column.getName() }
    @if(isSinglePKColumn(columnName)) {
        @{columnName = "id"}
    }
    public @column.getJavaType().getSimpleName() get@columnName.app_methodName() () {
        return @columnName.app_fieldName();
    }
    public void set@columnName.app_methodName() (@column.getJavaType().getSimpleName() obj) {
        @columnName.app_fieldName() = obj;
    }

}
}